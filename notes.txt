


TODO


    Move copies of the app to the decorators presentation
        Make "temp" version of the Angular 2 app
        Remove all decorators from all classes
        Make sure that it still compiles
        Write up notes for adding the decorators back



    Put together a list of the Angular 2 decorators
    Work up example of class, property, parameter, and method decorators
    Work up example of metadata API
    Work up demos of decorator library

    Put together slides
    Write up notes for demos




    Create ngForward demos
        Just write a version of my demo app using ngForward???
        Or create a small, simple demo???

    Read Angular 2 documentation







General Presentation Notes
    The landscape of declarative programming
        C#, Java, Python
    What are decorators?
        Create simple example
        How do they work?
        What can we do with them?
        Logging, memoizing, readonly, controller, inject
    Examples of decorators in Angular 2
        Start with starter files and add a component and service
    Using ngForward in Angular 1.x
        Build out the same example
    Use my Civil War application for the A1 and A2 examples





Look for libraries that make Angular 1.x controllers look more like Angular 2 components
    ngDecorate
        https://github.com/OvidiuGuta/ngDecorate
    Angular2 Now
        https://github.com/pbastowski/angular2-now
    Angular Decorators
        https://github.com/MikeRyan52/angular-decorators

Metadata Reflection API (by Jonathan Turner)
    https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md

Experiment with class, method, and parameter decorators
    What can you do with each of these???

What does support for decorators look like in Babel???
    Babel 5 had support
    Babel 6 currently does not... but you can add back support via a plug-in

Review MDN documentation for...
    Proxy
        ???
    Reflect
        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect
